>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[2, 4, 6], [3, 5, 7]]
>>> matrix_divided(matrix, 4)
[[0.5, 1.0, 1.5], [0.75, 1.25, 1.75]]

>>> matrix = [["a", "c", "e"], [3, 5, 7]]
>>> matrix_divided(matrix, 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[2, 4, 6, 8], [3, 5, 7]]
>>> matrix_divided(matrix, 4)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [[2, 4, 6, 8], [3, 5, 7, 9]]
>>> matrix_divided(matrix, "a")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [[2, 4, 6, 8], [3, 5, 7, 9]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [[2, 4, 6, 8], [3, 5, 7, 9]]
>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix = []
>>> matrix_divided(matrix, 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = None
>>> matrix_divided(matrix, 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
